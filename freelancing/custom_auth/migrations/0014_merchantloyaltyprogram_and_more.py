# Generated by Django 4.2 on 2025-09-07 10:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("custom_auth", "0013_dealpointusage_merchantdealconfirmation_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="MerchantLoyaltyProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_delete", models.BooleanField(default=False)),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("update_time", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "visits_required",
                    models.PositiveIntegerField(
                        default=3, help_text="Number of visits required for reward"
                    ),
                ),
                (
                    "reward_type",
                    models.CharField(
                        choices=[
                            ("voucher", "Gift Voucher"),
                            ("points", "Points Bonus"),
                            ("discount", "Discount Percentage"),
                            ("free_item", "Free Item"),
                        ],
                        default="voucher",
                        max_length=20,
                    ),
                ),
                (
                    "voucher_title",
                    models.CharField(default="Loyalty Reward Voucher", max_length=255),
                ),
                (
                    "voucher_message",
                    models.TextField(
                        default="Thank you for your loyalty! Here's a special reward for you."
                    ),
                ),
                (
                    "voucher_value",
                    models.DecimalField(decimal_places=2, default=50.0, max_digits=10),
                ),
                ("voucher_expiry_days", models.PositiveIntegerField(default=30)),
                (
                    "points_bonus",
                    models.DecimalField(decimal_places=2, default=100.0, max_digits=10),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(decimal_places=2, default=10.0, max_digits=5),
                ),
                (
                    "discount_max_amount",
                    models.DecimalField(decimal_places=2, default=500.0, max_digits=10),
                ),
                (
                    "free_item_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("free_item_description", models.TextField(blank=True, null=True)),
                ("auto_generate_rewards", models.BooleanField(default=True)),
                (
                    "cooldown_days",
                    models.PositiveIntegerField(
                        default=7, help_text="Days to wait before next reward"
                    ),
                ),
                (
                    "merchant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="loyalty_program",
                        to="custom_auth.merchantprofile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RemoveField(
            model_name="merchantdeal",
            name="is_negotiable",
        ),
        migrations.RemoveField(
            model_name="merchantdealrequest",
            name="counter_offer",
        ),
        migrations.CreateModel(
            name="UserLoyaltyReward",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_delete", models.BooleanField(default=False)),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("update_time", models.DateTimeField(auto_now=True)),
                (
                    "reward_type",
                    models.CharField(
                        choices=[
                            ("voucher", "Gift Voucher"),
                            ("points", "Points Bonus"),
                            ("discount", "Discount Percentage"),
                            ("free_item", "Free Item"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("active", "Active"),
                            ("used", "Used"),
                            ("expired", "Expired"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "voucher_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("voucher_message", models.TextField(blank=True, null=True)),
                (
                    "voucher_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "voucher_code",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "points_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "discount_percentage",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "discount_max_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "free_item_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("free_item_description", models.TextField(blank=True, null=True)),
                ("expiry_date", models.DateTimeField()),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                (
                    "usage_location",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("usage_notes", models.TextField(blank=True, null=True)),
                (
                    "loyalty_program",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rewards",
                        to="custom_auth.merchantloyaltyprogram",
                    ),
                ),
                (
                    "merchant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="loyalty_rewards_given",
                        to="custom_auth.merchantprofile",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="loyalty_rewards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-create_time"],
            },
        ),
        migrations.CreateModel(
            name="UserVisitTracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_delete", models.BooleanField(default=False)),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("update_time", models.DateTimeField(auto_now=True)),
                ("visit_date", models.DateTimeField(auto_now_add=True)),
                (
                    "visit_type",
                    models.CharField(
                        choices=[
                            ("physical", "Physical Visit"),
                            ("online", "Online Visit"),
                            ("purchase", "Purchase Made"),
                            ("redemption", "Voucher Redeemed"),
                        ],
                        default="physical",
                        max_length=20,
                    ),
                ),
                ("visit_notes", models.TextField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "merchant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_visits",
                        to="custom_auth.merchantprofile",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="merchant_visits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-visit_date"],
                "unique_together": {("user", "merchant", "visit_date")},
            },
        ),
    ]
